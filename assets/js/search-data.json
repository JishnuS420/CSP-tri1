{
  
    
        "post0": {
            "title": "Quiz",
            "content": "import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What is several lines of code called?&quot;) if rsp == &quot;sequence&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What does a python file end in?&quot;) if rsp == &quot;.ipynb&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;how do you remove a directory ?&quot;) if rsp == &quot;rmdir&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Did you get everything right?&quot;) if rsp == &quot;yes&quot;: print(&quot;Good Job!&quot;) if rsp == &quot;no&quot;: print(&quot;Nice try, better luck next time!&quot;) else: print(&quot;rip better luck next time!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, jishnus running /bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Question: What is several lines of code called? yes is incorrect! Question: What does a python file end in? .ipynb is correct! Question: how do you remove a directory ? rmdir is correct! Question: Did you get everything right? Good Job! rip better luck next time! jishnus you scored 2/3 .",
            "url": "https://jishnus420.github.io/CSP-tri1/fastpages/jupyter/python/2022/08/28/Quizzzz.html",
            "relUrl": "/fastpages/jupyter/python/2022/08/28/Quizzzz.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Class Notes",
            "content": "8/23/2022: . Multiples lines of code is called a sequence by college board . cd = change directory mkdir = create new directory rmdir = removes directory . 8/24/2022: . key values .",
            "url": "https://jishnus420.github.io/CSP-tri1/markdown/2022/08/23/2nd-Post-(Notes).html",
            "relUrl": "/markdown/2022/08/23/2nd-Post-(Notes).html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Jishnu Singiresu's Bash Check",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; export project_dir=$HOME/vscode6 export project=$project_dir/CSP-tri1 export project_repo=&quot;https://github.com/JishnuS420/CSP-tri1&quot; cd ~ if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al . echo &quot;Look for posts&quot; export posts=$project/_posts cd $posts pwd ls -l . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks cd $notebooks pwd ls -l . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images pwd ls -l . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md echo &quot;&quot; echo &quot;end of README.md&quot; . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . cd /tmp file=&quot;sample.md&quot; if [ -f &quot;$file&quot; ]; then rm $file fi tee -a $file &gt;/dev/null &lt;&lt;EOF # Show Generated Markdown This introductory paragraph and this line and the title above are generated using tee with the standard input (&lt;&lt;) redirection operator. - This bulleted element is still part of the tee body. EOF echo &quot;- This bulleted element and lines below are generated using echo with standard output (&gt;&gt;) redirection operator.&quot; &gt;&gt; $file echo &quot;- The list definition, as is, is using space to seperate lines. Thus the use of commas and hyphens in output.&quot; &gt;&gt; $file actions=(&quot;ls,list-directory&quot; &quot;cd,change-directory&quot; &quot;pwd,present-working-directory&quot; &quot;if-then-fi,test-condition&quot; &quot;env,bash-environment-variables&quot; &quot;cat,view-file-contents&quot; &quot;tee,write-to-output&quot; &quot;echo,display-content-of-string&quot; &quot;echo_text_&gt; $file,write-content-to-file&quot; &quot;echo_text_&gt;&gt; $file,append-content-to-file&quot;) for action in ${actions[@]}; do action=${action//-/ } action=${action//,/: } action=${action//_text_/ &quot;sample text &quot; } echo &quot; - ${action//-/ }&quot; &gt;&gt; $file done echo &quot;&quot; echo &quot;File listing and status&quot; ls -l $file wc $file mdless $file rm $file . Python Check . python --version python2 --version . Conda Check . conda list . echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi . Jupyter Checks . jupyter --version jupyter kernelspec list . test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi .",
            "url": "https://jishnus420.github.io/CSP-tri1/2022/08/22/Bashcheck.html",
            "relUrl": "/2022/08/22/Bashcheck.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "About Me!",
            "content": "Hi! . My name is Jishnu Singiresu, I am a Junior and I can’t wait to learn more about CS and its applications! . . Hobbies . My Hobbies involve: . Gaming | Hanging Out with Friends | Listening to Music | . My Goals for this Year . Getting good at CS | Making Friends | Get good grades | Can’t wait to learn with you! .",
            "url": "https://jishnus420.github.io/CSP-tri1/markdown/2022/08/21/My-First-Post!.html",
            "relUrl": "/markdown/2022/08/21/My-First-Post!.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Jishnu Singiresu's First Jupyter Notebook with Python Code",
            "content": "x = &quot;Hello, World!&quot; print(x) y = input(&quot;How is the weather today?&quot;) print(&quot;Nice!&quot;) . Hello, World! Nice! .",
            "url": "https://jishnus420.github.io/CSP-tri1/2022/08/21/FirstJupyterNB.html",
            "relUrl": "/2022/08/21/FirstJupyterNB.html",
            "date": " • Aug 21, 2022"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "Classes",
          "content": "Trimester 1 - Classes . This page is a online notebook for all my classes including CSP and serves to record notes taken in class . Week Class Notes for the Week .",
          "url": "https://jishnus420.github.io/CSP-tri1/classes/",
          "relUrl": "/classes/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Vocab",
          "content": "Vocabulary from CollegeBoard for studying . Sequence: Two or more lines of code forms a sequence . Def: This defines a variable which is useful when using input and output in a program . Input: This is what the user inputs into the code for an output . Output: Based on the user’s output the code will give something to the user . Procedural Abstraction: Grouping a sequence of commands and is used repeatedly .",
          "url": "https://jishnus420.github.io/CSP-tri1/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  

  
      ,"page5": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://jishnus420.github.io/CSP-tri1/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jishnus420.github.io/CSP-tri1/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}